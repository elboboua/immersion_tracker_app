<link rel="stylesheet" href="/css/getLog.css">
<link rel="stylesheet" href="/css/dashboard.css">

<style>
    .user-link {
        color: black;
        float: right;
        margin-top: 10px;
    }
</style>

<div id='follower-following-container'>

    <div id='button-group' class="btn-group btn-group-toggle" data-toggle="buttons" style="margin-top: 20px">
        <label class="btn btn-secondary active">
            <input type="radio" name="options" id="following-button" autocomplete="off" checked> Following
        </label>
        <label class="btn btn-secondary">
            <input type="radio" name="options" id="followers-button" autocomplete="off"> Followers
        </label>
    </div>


    <div id='following' class="users"></div>
    <div id='followers' class="users"></div>
</div>

<script>

let followingButton = document.getElementById('following-button');
let followersButton = document.getElementById('followers-button');

let followingDiv = document.getElementById('following');
let followersDiv = document.getElementById('followers');

followersDiv.style.display = 'none';

followersButton.onclick = () => {
    followingDiv.style.display = 'none';
    followersDiv.style.display = 'block';
}

followingButton.onclick = () => {
    followersDiv.style.display = 'none';
    followingDiv.style.display = 'block';
}



let createFollowerCards = (users, div) => {
        for (let i = 0; i < users.length; i++) {
        let container = document.getElementById(div)
        let card = document.createElement('div');
        card.style.padding = '10px'
        card.className = 'card log-card shadow';

        let row = document.createElement('div')
        row.className = 'text-left'

        let avatarContainer = document.createElement('div');
        avatarContainer.className = 'avatar-container header-components text-left'
        let avatar = document.createElement('img');
        avatar.src = `/imgs/avatars/${users[i].avatar_name}`
        avatar.className = 'avatar'

        let username_link = document.createElement('a')
        username_link.className = 'text-right user-link header-components'
        username_link.href = `/user/${users[i].username || 'default.png'}`;
        let username = document.createElement('div');
        username.innerText = '@' + users[i].username;

        avatarContainer.appendChild(avatar)
        row.appendChild(avatarContainer);
        username_link.appendChild(username)
        row.appendChild(username_link);
        card.appendChild(row)
        container.appendChild(card)

    } 
}


let populateFollowingFollowers = async (url) => {

    let result = await fetch(url);
    result = await result.json();
    createFollowerCards(result.following, 'following')
    createFollowerCards(result.followers, 'followers')

}

if (location.href.split('/')[3] != 'followers-following') {
    // user's page
    let message = document.createElement('h1')
    message.innerText = 'This page is in progress! Come back soon!'
    message.style.textAlign = 'center';
    message.style.margin = '5px';

    document.getElementsByTagName('body')[0].appendChild(message);
} else {
    // your page
    populateFollowingFollowers('/followers/get-users');
}
</script>